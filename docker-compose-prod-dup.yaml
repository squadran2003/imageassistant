version: '3.8'

services:
  nginx:
    build: ./nginx
    ports:
      - "443:443"
      - "80:80"
    networks:
      - imageassistant-network
    volumes:
      - static:/home/ubuntu/app/imageassistant/imageassistant/static/
      - /etc/letsencrypt:/etc/letsencrypt

  redis-imageassistant:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - imageassistant-network

  django:
    build:
      context: ./
      dockerfile: ./production_docker/Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=config.production_settings
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn config.wsgi:application --bind 0.0.0.0:8084 --workers=2 --threads=4 --worker-class=gthread --worker-tmp-dir=/dev/shm --max-requests=1000 --max-requests-jitter=50 --timeout=100"
    ports:
      - "8084:8084"
    networks:
      - imageassistant-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8084/health/')"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 100s

  celery-imageassistant:
    build:
      context: .
      dockerfile: ./production_docker/Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=config.production_settings
    command: >
      sh -c "celery -A config worker --loglevel=info --max-tasks-per-child=1 --concurrency=2"
    depends_on:
      - redis-imageassistant
    networks:
      - imageassistant-network

networks:
  imageassistant-network:
    driver: bridge

volumes:
  static:
  redis-data: