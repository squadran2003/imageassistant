"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from decouple import config, Csv
import os



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', 'django-insecure-#&z!_!@')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='127.0.0.1', cast=Csv())
SECRET_KEY = config('SECRET_KEY', os.environ.get('SECRET_KEY'))
DB_NAME = config('DB_NAME', default=os.environ.get('DB_NAME'))
DB_USER = config('DB_USER', default=os.environ.get('DB_USER'))
DB_PASSWORD = config('DB_PASSWORD', default=os.environ.get('DB_PASSWORD'))
DB_HOST = config('DB_HOST', default=os.environ.get('DB_HOST'))
DJANGO_SETTINGS_MODULE = config('DJANGO_SETTINGS_MODULE', default=os.environ.get('DJANGO_SETTINGS_MODULE'))
REDIS_URL = config('REDIS_URL', default="redis://redis-imageassistant:6379/1")
MAILERSEND_SMTP_PORT=config('MAILERSEND_SMTP_PORT', os.environ.get('MAILERSEND_SMTP_PORT'))
MAILERSEND_SMTP_USERNAME=config('MAILERSEND_SMTP_USERNAME', os.environ.get('MAILERSEND_SMTP_USERNAME'))
MAILERSEND_SMTP_PASSWORD=config('MAILERSEND_SMTP_PASSWORD', os.environ.get('MAILERSEND_SMTP_PASSWORD'))
MAILERSEND_SMTP_HOST=config('MAILERSEND_SMTP_HOST', os.environ.get('MAILERSEND_SMTP_HOST'))
GOOGLE_CLIENT_ID = config('GOOGLE_CLIENT_ID', os.environ.get('GOOGLE_CLIENT_ID'))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'compressor',
    "template_partials",
    'rest_framework',
    'storages',
    'corsheaders',
    'django_celery_beat',
    'images',
    'api',
    'users'
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

ESSION_COOKIE_AGE = 86400  # One day in seconds, adjust as needed
SESSION_SAVE_EVERY_REQUEST = True  # Save the session to the database on every request

SITE_ID = 1

ROOT_URLCONF = 'config.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates"],
        'OPTIONS': {
             "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,
        'PORT': 5432
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

COMPRESS_ROOT = BASE_DIR / 'assets'

COMPRESS_ENABLED = True

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "assets"),
]

STATIC_ROOT = 'static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CELERY_BROKER_URL = config("CELERY_BROKER_URL", "redis://redis-imageassistant:6379/0")
CELERY_RESULT_BACKEND = config("CELERY_RESULT_BACKEND", "redis://redis-imageassistant:6379/0")
CELERY_IGNORE_RESULT = True
CELERY_ACCEPT_CONTENT = ["application/json"]
CELERY_RESULT_SERIALIZER = "json"
CELERY_TASK_SERIALIZER = "json"
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers.DatabaseScheduler"


CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": REDIS_URL,
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

IMAGE_PROCESSED_FOLDER_NAME = "celery_processed_images"

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
]
CLOUDFRONT_DOMAIN = config('CLOUDFRONT_DOMAIN', os.environ.get('CLOUDFRONT_DOMAIN'))

STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

STRIPE_SECRET_KEY = config('STRIPE_SECRET_KEY', os.environ.get('STRIPE_SECRET_KEY'))
DOMAIN = "http://localhost:8084"
STRIPE_PRICE_ID = config('STRIPE_PRICE_ID', os.environ.get('STRIPE_PRICE_ID'))
STRIPE_PUBLIC_KEY = config('STRIPE_PUBLISHED_KEY', os.environ.get('STRIPE_PUBLISHED_KEY'))
STABILITY_AI_KEY = config('STABILITY_AI_KEY', os.environ.get('STABILITY_AI_KEY'))


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = MAILERSEND_SMTP_HOST
EMAIL_PORT = MAILERSEND_SMTP_PORT
EMAIL_USE_TLS = True
EMAIL_HOST_USER = MAILERSEND_SMTP_USERNAME
EMAIL_HOST_PASSWORD = MAILERSEND_SMTP_PASSWORD
AUTH_USER_MODEL = "users.CustomUser"
LOGOUT_REDIRECT_URL = "/dashboard"
EMAIL_DOMAIN = "localhost:8084"
GOOGLE_LOGIN_PROTOCOl = "http"
GOOGLE_LOGIN_DOMAIN = "localhost:8084"
GOOGLE_LOGIN_CALLBACK_PATH = "users/google/login/"
GOOGLE_LOGIN_REDIRECT_URI = f"{GOOGLE_LOGIN_PROTOCOl}://{GOOGLE_LOGIN_DOMAIN}/{GOOGLE_LOGIN_CALLBACK_PATH}"

# how much does 10$ cost in credits
# 1$ = 50 credits
CREDIT_SETTINGS = 50

DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', '')