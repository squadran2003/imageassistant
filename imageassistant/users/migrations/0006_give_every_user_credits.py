# Generated by Django 4.2.20 on 2025-07-11 15:13

from django.db import migrations


def give_every_user_credits_and_add_feature_flag(apps, schema_editor):
    User = apps.get_model('users', 'CustomUser')
    Credit = apps.get_model('users', 'Credit')
    FeatureFlag = apps.get_model('users', 'FeatureFlag')

    # Fetch all users
    users = User.objects.all()

    # Create a credit entry for each user
    for user in users:
        try:
            # Try to access existing credit
            if user.credit.total == 0:
                user.credit.total = 100
                user.credit.save()
        except Credit.DoesNotExist:
            # Create credit object if it doesn't exist
            Credit.objects.create(user=user, total=100)
        # if the user does not have a feature flag, create one
        if not FeatureFlag.objects.filter(name='show_credits', users=user).exists():
            feature_flag = FeatureFlag.objects.get_or_create(name='show_credits')[0]
            feature_flag.users.add(user)
            feature_flag.save()

def reverse_give_every_user_credits_and_add_feature_flag(apps, schema_editor):
    User = apps.get_model('users', 'CustomUser')
    Credit = apps.get_model('users', 'Credit')
    FeatureFlag = apps.get_model('users', 'FeatureFlag')

    # Fetch all users
    users = User.objects.all()

    # Remove credit entries for each user
    for user in users:
        try:
            credit = user.credit
            credit.delete()
        except Credit.DoesNotExist:
            pass

        # Remove feature flag if it exists
        FeatureFlag.objects.filter(name='show_credits', users=user).delete()

class Migration(migrations.Migration):

    dependencies = [
        ('users', '0005_change_credit_table_to_onetone'),
    ]

    operations = [
        migrations.RunPython(give_every_user_credits_and_add_feature_flag, reverse_code=reverse_give_every_user_credits_and_add_feature_flag),
    ]
