version: '3.8'

services:
  frontend:
    build:
      context: ./imageassistant/frontend
      dockerfile: ./Dockerfile
    ports:
      - 5000:5000
    command: >
      sh -c "npm install && npm run serve -- --port 5000 --host 0.0.0.0"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - VUE_APP_API_URL=http://localhost:8084
    volumes:
      - ./imageassistant/frontend/:/app/
      - ./imageassistant/frontend/node_modules:/app/node_modules
    networks:
      - django-network  
  redis-imageassistant:
    image: redis:alpine
    ports:
      - 6380:6379
    volumes:
      - redis-data:/data
    networks:
      - django-network
  django:
    restart: always
    build:
      context: ./
      dockerfile: ./Dockerfile  
      
    user: ${CURRENT_UID}
    environment:
      # - change this to your settings file
      - DJANGO_SETTINGS_MODULE=config.settings
      - DOCKER_CONTAINER=True
    volumes:
      # change to your base directory
      - ./:/usr/src/imageassistant/
      - ./imageassistant/static:/usr/src/imageassistant/static/
    ports:
      - 8084:8084
    env_file:
      # put the env fie in the same directory as the manage.py file
      - ./imageassistant/.env
    networks:
      - django-network
    depends_on:
      - redis-imageassistant
      - celery-imageassistant
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8084"
  celery-imageassistant:
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      # change to your base directory
      - ./:/usr/src/imageassistant/
    command: >
      sh -c "celery -A config worker --loglevel=info --max-tasks-per-child=1 --concurrency=4"
    depends_on:
      - redis-imageassistant
    networks:
      - django-network

    


networks:
  django-network:
    driver: bridge

volumes:
  redis-data: