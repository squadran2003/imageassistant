version: '3.8'

services:
  nginx:
    build: ./nginx
    image: ${REGISTRY_URL:-localhost}/imageassistant-nginx:${TAG:-latest}
    ports:
      - 443:443
      - 80:80
    depends_on:
      - django
    networks:
      - imageassistant-network
    volumes:
      # change to your static path
      - static:/home/ubuntu/app/imageassistant/imageassistant/static/
      - /etc/letsencrypt:/etc/letsencrypt
    deploy:
      update_config:
        order: start-first
        failure_action: rollback
        delay: 10s
      restart_policy:
        condition: any
        delay: 5s
  redis-imageassistant:
    image: redis:alpine
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    networks:
      - imageassistant-network
  django:
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile
    image: ${REGISTRY_URL:-localhost}/imageassistant-django:${TAG:-latest}
    deploy:
      update_config:
        order: start-first
        failure_action: rollback
        delay: 10s
      restart_policy:
        condition: any
        delay: 5s
    environment:
      # set to your production settings file
      - DJANGO_SETTINGS_MODULE=config.production_settings
    command: >
      sh -c "
              python manage.py migrate && 
              python manage.py collectstatic --noinput &&
              gunicorn config.wsgi:application --bind 0.0.0.0:8084"
    volumes:
      - ./:/usr/src/imageassistant/
      - static:/usr/src/imageassistant/imageassistant/config/static/
    ports:
      - 8084:8084
    networks:
      - imageassistant-network
    depends_on:
      - redis-imageassistant
      - celery-imageassistant
  celery-imageassistant:
    build:
      context: .
      dockerfile: ./celery/Dockerfile
    image: ${REGISTRY_URL:-localhost}/imageassistant-celery:${TAG:-latest}
    environment:
      # set to your production settings file
      - DJANGO_SETTINGS_MODULE=config.production_settings
    volumes:
      # change to your base directory
      - ./:/usr/src/imageassistant/
    command: >
      sh -c "celery -A config worker --loglevel=info --max-tasks-per-child=1 --concurrency=4"
    depends_on:
      - redis-imageassistant
    networks:
      - imageassistant-network
    deploy:
      update_config:
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: any
networks:
  imageassistant-network:
    driver: bridge

volumes:
  static:
  redis-data:


