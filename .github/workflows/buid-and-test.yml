name: BuildandTest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.13]
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB:  ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      redis-imageassistant:
        image: redis
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pip version 23.0.1
      run: |
        python -m pip install --upgrade pip==23.0.1
    - name: Install Dependencies
      run: |
        pip install poetry
        poetry config virtualenvs.create false && poetry install  --no-interaction --no-ansi --no-root
    - name: Start Celery Worker
      env:
        DJANGO_SETTINGS_MODULE: config.settings
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        REDIS_URL: "redis://localhost:6379/1"
        DB_NAME: ${{ secrets.POSTGRES_DB }}
        DB_USER: ${{ secrets.POSTGRES_USER }}
        DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        DB_HOST: localhost
        DB_PORT: 5432
      run: |
        cd ./imageassistant
        celery -A config worker --loglevel=INFO --detach
    - name: Run migrations and tests
      env:
        DB_NAME: ${{ secrets.POSTGRES_DB }}
        DB_USER: ${{ secrets.POSTGRES_USER }}
        DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        DB_HOST: localhost
        DB_PORT: 5432
        DJANGO_SETTINGS_MODULE: config.settings
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        REDIS_URL: "redis://localhost:6379/1"
      run: |
        cd ./imageassistant
        python manage.py migrate
        python manage.py test
